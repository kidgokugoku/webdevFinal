<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CourseManagement.mapper.TeacherCourseMapper">
    <resultMap id="BaseResultMap" type="com.CourseManagement.Entity.TeacherCourse">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
        <result column="created_user" jdbcType="VARCHAR" property="createdUser"/>
        <result column="modified_user" jdbcType="VARCHAR" property="modifiedUser"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from teacher_course
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="delete" parameterType="com.CourseManagement.Entity.TeacherCourse">
        delete
        from teacher_course
        where teacher_id = #{teacherId,jdbcType=INTEGER}
          and course_id = #{courseId,jdbcType=INTEGER}
    </delete>

    <select id="selectByIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, teacher_id, course_id
        from teacher_course
        where teacher_id = #{teacherId,jdbcType=INTEGER}
          and course_id = #{courseId,jdbcType=INTEGER}
    </select>
    <select id="selectByTeacherId" parameterType="java.lang.Integer" resultType="map">
        select teacher_id,
               course_id,
               c.name,
               c.credit           as credit,
               c.duration,
               c.capacity,
               c.campus,
               c.course_type      as courseType,
               c.current_selected as currentSelected
        from teacher_course
                 left join courses c
                           on c.id = course_id
        where teacher_course.teacher_id = #{teacherId,jdbcType=INTEGER}

    </select>
    <select id="selectByCourseId" parameterType="java.lang.Integer" resultType="map">
        select teacher_id,
               course_id,
               c.name,
               c.credit           as credit,
               c.duration,
               c.capacity,
               c.campus,
               c.course_type      as courseType,
               c.current_selected as currentSelected
        from teacher_course
                 left join courses c
                           on c.id = course_id
        where teacher_course.course_id = #{courseId,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.CourseManagement.Entity.TeacherCourse">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into teacher_course (id, teacher_id, course_id,
        created_time, modified_time, created_user,
        modified_user)
        values (#{id,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER},
        #{createdTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, #{createdUser,jdbcType=VARCHAR},
        #{modifiedUser,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.CourseManagement.Entity.TeacherCourse">
        update teacher_course
        set teacher_id    = #{teacherId,jdbcType=INTEGER},
            course_id     = #{courseId,jdbcType=INTEGER},
            created_time  = #{createdTime,jdbcType=TIMESTAMP},
            modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
            created_user  = #{createdUser,jdbcType=VARCHAR},
            modified_user = #{modifiedUser,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, teacher_id, course_id, created_time, modified_time, created_user, modified_user
        from teacher_course
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id, teacher_id, course_id, created_time, modified_time, created_user, modified_user
        from teacher_course
    </select>

</mapper>